<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:oauth="http://spring-security-oauth.codehaus.org/3.0"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd
              http://spring-security-oauth.codehaus.org/3.0 http://spring-security-oauth.codehaus.org/schema/spring-security-oauth-3.0.xsd">

  <http auto-config='true' access-denied-page="/login.jsp">
    <intercept-url pattern="/xml/photos" access="ROLE_USER" />
    <intercept-url pattern="/json/photos" access="ROLE_USER" />
    <intercept-url pattern="/photo/**" access="ROLE_USER" />
    <intercept-url pattern="/oauth/**" access="ROLE_USER" />
    <intercept-url pattern="/request_token_authorized.jsp" access="ROLE_USER" />
    <intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />

    <form-login authentication-failure-url="/login.jsp" default-target-url="/index.jsp" login-page="/login.jsp" login-processing-url="/login.do"/>
    <logout logout-success-url="/index.jsp" logout-url="/logout.do"/>
  </http>

  <authentication-provider user-service-ref="userService"/>

  <user-service id="userService">
    <user name="marissa" password="koala" authorities="ROLE_USER"/>
    <user name="paul" password="emu" authorities="ROLE_USER"/>
  </user-service>

  <oauth:provider consumer-details-service-ref="consumerDetails"
                  token-services-ref="tokenServices"
                  request-token-url="/oauth/request_token"
                  authenticate-token-url="/oauth/authorize"
                  authentication-failed-url="/oauth/confirm_access"
                  access-granted-url="/request_token_authorized.jsp"
                  access-token-url="/oauth/access_token"
                  require10a="false"/>

  <oauth:consumer-details-service id="consumerDetails">
    <oauth:consumer name="Tonr.com" key="tonr-consumer-key" secret="SHHHHH!!!!!!!!!!" resourceName="Your Photos"
                    resourceDescription="Your photos that you have uploaded to sparklr.com."/>
    <oauth:consumer name="iGoogle" key="www.google.com" secret="classpath:/org/springframework/security/oauth/examples/sparklr/certs/igoogle.cert"
                    typeOfSecret="rsa-cert" resourceName="Your Photos" resourceDescription="Your photos that you have uploaded to sparklr.com."/>
  </oauth:consumer-details-service>

  <oauth:token-services id="tokenServices"/>

  <!--

    This is how you do the same thing as the 'http' element above, but with FilterChainProxy. If you want to try it out, uncomment this block
    and comment out the 'http' block above.

    <authentication-manager alias="authManager"/>

    <beans:bean name="springSecurityFilterChain" class="org.springframework.security.util.FilterChainProxy">
      <filter-chain-map path-type="ant">
        <filter-chain pattern="/**" filters="httpSessionContextIntegrationFilter, logoutFilter, authenticationProcessingFilter, rememberMeProcessingFilter, anonymousProcessingFilter, exceptionTranslationFilter, oauthRequestTokenFilter, oauthAuthenticateTokenFilter, oauthAccessTokenFilter, oauthProtectedResourceFilter, filterSecurityInterceptor"/>
      </filter-chain-map>
    </beans:bean>

    <beans:bean id="httpSessionContextIntegrationFilter" class="org.springframework.security.context.HttpSessionContextIntegrationFilter"/>

    <beans:bean id="logoutFilter" class="org.springframework.security.ui.logout.LogoutFilter">
      <beans:constructor-arg value="/index.jsp" index="0"/>
      <beans:constructor-arg index="1">
        <beans:list>
          <beans:bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler"/>
          <beans:ref bean="rememberMeServices"/>
        </beans:list>
      </beans:constructor-arg>
      <beans:property name="filterProcessesUrl" value="/logout.do"/>
    </beans:bean>

    <beans:bean id="authenticationProcessingFilter" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">
      <beans:property name="authenticationFailureUrl" value="/login.jsp"/>
      <beans:property name="defaultTargetUrl" value="/index.jsp"/>
      <beans:property name="filterProcessesUrl" value="/login.do"/>
      <beans:property name="authenticationManager" ref="authManager"/>
    </beans:bean>

    <beans:bean id="rememberMeProcessingFilter" class="org.springframework.security.ui.rememberme.RememberMeProcessingFilter">
      <beans:property name="authenticationManager" ref="authManager"/>
      <beans:property name="rememberMeServices" ref="rememberMeServices"/>
    </beans:bean>

    <beans:bean id="rememberMeServices" class="org.springframework.security.ui.rememberme.TokenBasedRememberMeServices">
      <beans:property name="key" value="SPARKLR"/>
      <beans:property name="userDetailsService" ref="userService"/>
    </beans:bean>

    <beans:bean id="anonymousProcessingFilter" class="org.springframework.security.providers.anonymous.AnonymousProcessingFilter">
      <beans:property name="userAttribute" value="anonymousUser,IS_AUTHENTICATED_ANONYMOUSLY"/>
      <beans:property name="key" value="SPARKLR"/>
    </beans:bean>

    <beans:bean id="exceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
      <beans:property name="accessDeniedHandler">
        <beans:bean class="org.springframework.security.ui.AccessDeniedHandlerImpl">
          <beans:property name="errorPage" value="/login.jsp"/>
        </beans:bean>
      </beans:property>
      <beans:property name="authenticationEntryPoint">
        <beans:bean class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
          <beans:property name="loginFormUrl" value="/login.jsp"/>
        </beans:bean>
      </beans:property>
    </beans:bean>

    <beans:bean id="filterSecurityInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
      <beans:property name="authenticationManager" ref="authManager"/>
      <beans:property name="accessDecisionManager" ref="accessDecisionManager"/>
      <beans:property name="objectDefinitionSource">
        <beans:value>
          CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
          PATTERN_TYPE_APACHE_ANT
          /xml/photos=ROLE_USER
          /json/photos=ROLE_USER
          /photo/**=ROLE_USER
          /oauth/**=ROLE_USER
          /request_token_authorized.jsp=ROLE_USER
          /**=IS_AUTHENTICATED_ANONYMOUSLY
        </beans:value>
      </beans:property>
    </beans:bean>

    <beans:bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
      <beans:property name="decisionVoters">
        <beans:list>
          <beans:bean class="org.springframework.security.vote.RoleVoter"/>
          <beans:bean class="org.springframework.security.vote.AuthenticatedVoter"/>
        </beans:list>
      </beans:property>
    </beans:bean>
  -->

</beans:beans>
